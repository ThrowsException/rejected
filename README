Rejected is a AMQP consumer daemon and message processing framework. It allows
for rapid development of message processing consumers by handling all of the
core functionality of communicating with RabbitMQ and management of consumer
processes.

Features Include:

 * Optional elastic scaling of consumers based upon demand
 * Specify a min # of consumers, max # of consumers and threshold to spawn new threads
 * Internal statistics gathering and exposure

Requirements:

 * pika
 * pyyaml

Example Processor:

from rejected import processor

    class Test:

        def process(self, message):

            self._logger.debug('In Test.process: %s' % message.body)
            return True
